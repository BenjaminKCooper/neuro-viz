var SetMaterialMapCommand=function(t,e,a){Command.call(this),this.type="SetMaterialMapCommand",this.name="Set Material."+e,this.object=t,this.mapName=e,this.oldMap=void 0!==t?t.material[e]:void 0,this.newMap=a};SetMaterialMapCommand.prototype={execute:function(){this.object.material[this.mapName]=this.newMap,this.object.material.needsUpdate=!0,this.editor.signals.materialChanged.dispatch(this.object.material)},undo:function(){this.object.material[this.mapName]=this.oldMap,this.object.material.needsUpdate=!0,this.editor.signals.materialChanged.dispatch(this.object.material)},toJSON:function(){function t(t){if(null===t||void 0===t)return null;var a={geometries:{},materials:{},textures:{},images:{}},i=t.toJSON(a),o=e(a.images);return o.length>0&&(i.images=o),i.sourceFile=t.sourceFile,i}function e(t){var e=[];for(var a in t){var i=t[a];delete i.metadata,e.push(i)}return e}var a=Command.prototype.toJSON.call(this);return a.objectUuid=this.object.uuid,a.mapName=this.mapName,a.newMap=t(this.newMap),a.oldMap=t(this.oldMap),a},fromJSON:function(t){function e(t){var e=null;if(null!==t){var a=new THREE.ObjectLoader,i=a.parseImages(t.images),o=a.parseTextures([t],i);e=o[t.uuid],e.sourceFile=t.sourceFile}return e}Command.prototype.fromJSON.call(this,t),this.object=this.editor.objectByUuid(t.objectUuid),this.mapName=t.mapName,this.oldMap=e(t.oldMap),this.newMap=e(t.newMap)}};