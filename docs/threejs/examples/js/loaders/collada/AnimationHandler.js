THREE.AnimationHandler={LINEAR:0,CATMULLROM:1,CATMULLROM_FORWARD:2,add:function(){console.warn("THREE.AnimationHandler.add() has been deprecated.")},get:function(){console.warn("THREE.AnimationHandler.get() has been deprecated.")},remove:function(){console.warn("THREE.AnimationHandler.remove() has been deprecated.")},animations:[],init:function(e){if(e.initialized===!0)return e;for(var r=0;r<e.hierarchy.length;r++){for(var i=0;i<e.hierarchy[r].keys.length;i++)if(e.hierarchy[r].keys[i].time<0&&(e.hierarchy[r].keys[i].time=0),void 0!==e.hierarchy[r].keys[i].rot&&!(e.hierarchy[r].keys[i].rot instanceof THREE.Quaternion)){var n=e.hierarchy[r].keys[i].rot;e.hierarchy[r].keys[i].rot=(new THREE.Quaternion).fromArray(n)}if(e.hierarchy[r].keys.length&&void 0!==e.hierarchy[r].keys[0].morphTargets){for(var a={},i=0;i<e.hierarchy[r].keys.length;i++)for(var h=0;h<e.hierarchy[r].keys[i].morphTargets.length;h++){var t=e.hierarchy[r].keys[i].morphTargets[h];a[t]=-1}e.hierarchy[r].usedMorphTargets=a;for(var i=0;i<e.hierarchy[r].keys.length;i++){var s={};for(var t in a){for(var h=0;h<e.hierarchy[r].keys[i].morphTargets.length;h++)if(e.hierarchy[r].keys[i].morphTargets[h]===t){s[t]=e.hierarchy[r].keys[i].morphTargetsInfluences[h];break}h===e.hierarchy[r].keys[i].morphTargets.length&&(s[t]=0)}e.hierarchy[r].keys[i].morphTargetsInfluences=s}}for(var i=1;i<e.hierarchy[r].keys.length;i++)e.hierarchy[r].keys[i].time===e.hierarchy[r].keys[i-1].time&&(e.hierarchy[r].keys.splice(i,1),i--);for(var i=0;i<e.hierarchy[r].keys.length;i++)e.hierarchy[r].keys[i].index=i}return e.initialized=!0,e},parse:function(e){var r=function(e,i){i.push(e);for(var n=0;n<e.children.length;n++)r(e.children[n],i)},i=[];if(e instanceof THREE.SkinnedMesh)for(var n=0;n<e.skeleton.bones.length;n++)i.push(e.skeleton.bones[n]);else r(e,i);return i},play:function(e){this.animations.indexOf(e)===-1&&this.animations.push(e)},stop:function(e){var r=this.animations.indexOf(e);r!==-1&&this.animations.splice(r,1)},update:function(e){for(var r=0;r<this.animations.length;r++)this.animations[r].resetBlendWeights();for(var r=0;r<this.animations.length;r++)this.animations[r].update(e)}};