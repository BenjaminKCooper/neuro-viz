THREE.FunctionNode=function(t,e,i,n){t=t||"",this.isMethod="string"!=typeof e,this.useKeywords=!0,THREE.TempNode.call(this,this.isMethod?null:e),this.isMethod?this.eval(t,e,i,n):this.eval(t,i,n)},THREE.FunctionNode.rDeclaration=/^([a-z_0-9]+)\s([a-z_0-9]+)\s?\((.*?)\)/i,THREE.FunctionNode.rProperties=/[a-z_0-9]+/gi,THREE.FunctionNode.prototype=Object.create(THREE.TempNode.prototype),THREE.FunctionNode.prototype.constructor=THREE.FunctionNode,THREE.FunctionNode.prototype.isShared=function(t,e){return!this.isMethod},THREE.FunctionNode.prototype.getType=function(t){return t.getTypeByFormat(this.type)},THREE.FunctionNode.prototype.getInputByName=function(t){for(var e=this.inputs.length;e--;)if(this.inputs[e].name===t)return this.inputs[e]},THREE.FunctionNode.prototype.getIncludeByName=function(t){for(var e=this.includes.length;e--;)if(this.includes[e].name===t)return this.includes[e]},THREE.FunctionNode.prototype.generate=function(t,e){for(var i,n=0,o=this.value,s=0;s<this.includes.length;s++)t.include(this.includes[s],this);for(var r in this.extensions)t.material.extensions[r]=!0;for(;i=THREE.FunctionNode.rProperties.exec(this.value);){var h=i[0],u=!this.isMethod||!this.getInputByName(h),d=h;if(this.keywords[h]||this.useKeywords&&u&&THREE.NodeLib.containsKeyword(h)){var a=this.keywords[h];if(!a){var c=THREE.NodeLib.getKeywordData(h);c.cache&&(a=t.keywords[h]),a=a||THREE.NodeLib.getKeyword(h,t),c.cache&&(t.keywords[h]=a)}d=a.build(t)}h!=d&&(o=o.substring(0,i.index+n)+d+o.substring(i.index+h.length+n),n+=d.length-h.length),void 0===this.getIncludeByName(d)&&THREE.NodeLib.contains(d)&&t.include(THREE.NodeLib.get(d))}return"source"===e?o:this.isMethod?(t.include(this,!1,o),this.name):t.format("("+o+")",this.getType(t),e)},THREE.FunctionNode.prototype.eval=function(t,e,i,n){if(t=(t||"").trim(),this.includes=e||[],this.extensions=i||{},this.keywords=n||{},this.isMethod){var o=t.match(THREE.FunctionNode.rDeclaration);if(this.inputs=[],o&&4==o.length){this.type=o[1],this.name=o[2];var s=o[3].match(THREE.FunctionNode.rProperties);if(s)for(var r=0;r<s.length;){var h,u,d=s[r++];"in"==d||"out"==d||"inout"==d?h=s[r++]:(h=d,d=""),u=s[r++],this.inputs.push({name:u,type:h,qualifier:d})}}else this.type="",this.name=""}this.value=t};