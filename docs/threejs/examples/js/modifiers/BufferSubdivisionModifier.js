function convertGeometryToIndexedBuffer(e){var r,t,i=new THREE.BufferGeometry,s=new TypedArrayHelper(e.vertices.length,0,THREE.Vector3,Float32Array,3,["x","y","z"]),n=new TypedArrayHelper(e.faces.length,0,THREE.Face3,Uint32Array,3,["a","b","c"]),a=new TypedArrayHelper(3*e.faceVertexUvs[0].length*3,0,THREE.Vector2,Float32Array,2,["x","y"]);for(r=0,t=e.vertices.length;r<t;r++)s.push_element(e.vertices[r]);for(r=0,t=e.faces.length;r<t;r++)n.push_element(e.faces[r]);for(r=0,t=e.faceVertexUvs[0].length;r<t;r++)a.push_element(e.faceVertexUvs[0][r][0]),a.push_element(e.faceVertexUvs[0][r][1]),a.push_element(e.faceVertexUvs[0][r][2]);return n.trim_size(),s.trim_size(),a.trim_size(),i.setIndex(new THREE.BufferAttribute(n.buffer,3)),i.addAttribute("position",new THREE.BufferAttribute(s.buffer,3)),i.addAttribute("uv",new THREE.BufferAttribute(a.buffer,2)),i}function compute_vertex_normals(e){var r=["a","b","c"],t=["x","y","z"],i=new TypedArrayHelper(0,5,THREE.Vector3,Float32Array,3,t),s=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,r);i.from_existing(e.getAttribute("position").array);var n=new TypedArrayHelper(3*i.length,4,THREE.Vector3,Float32Array,3,t),a=new TypedArrayHelper(i.length,1,function(){this.x=0},Float32Array,1,["x"]);n.length=i.length,s.from_existing(e.index.array);var g,o,f=[0,0,0];for(g=0,il=s.length;g<il;g++)s.index_to_register(g,0),i.index_to_register(s.register[0].a,0),i.index_to_register(s.register[0].b,1),i.index_to_register(s.register[0].c,2),n.register[0].subVectors(i.register[1],i.register[0]),n.register[1].subVectors(i.register[2],i.register[1]),n.register[0].cross(n.register[1]),o=Math.abs(n.register[0].length()),a.buffer[s.register[0].a]+=o,a.buffer[s.register[0].b]+=o,a.buffer[s.register[0].c]+=o;var u,h,l;for(g=0,il=s.length;g<il;g++)s.index_to_register(g,0),i.index_to_register(s.register[0].a,0),i.index_to_register(s.register[0].b,1),i.index_to_register(s.register[0].c,2),n.register[0].subVectors(i.register[1],i.register[0]),n.register[1].subVectors(i.register[2],i.register[0]),n.register[3].set(0,0,0),n.register[3].x=n.register[0].y*n.register[1].z-n.register[0].z*n.register[1].y,n.register[3].y=n.register[0].z*n.register[1].x-n.register[0].x*n.register[1].z,n.register[3].z=n.register[0].x*n.register[1].y-n.register[0].y*n.register[1].x,n.register[0].cross(n.register[1]),o=Math.abs(n.register[0].length()),f[0]=o/a.buffer[s.register[0].a],f[1]=o/a.buffer[s.register[0].b],f[2]=o/a.buffer[s.register[0].c],u=n.register[3].x*f[0],h=n.register[3].y*f[0],l=n.register[3].z*f[0],n.buffer[3*s.register[0].a+0]+=n.register[3].x*f[0],n.buffer[3*s.register[0].a+1]+=n.register[3].y*f[0],n.buffer[3*s.register[0].a+2]+=n.register[3].z*f[0],n.buffer[3*s.register[0].b+0]+=n.register[3].x*f[1],n.buffer[3*s.register[0].b+1]+=n.register[3].y*f[1],n.buffer[3*s.register[0].b+2]+=n.register[3].z*f[1],n.buffer[3*s.register[0].c+0]+=n.register[3].x*f[2],n.buffer[3*s.register[0].c+1]+=n.register[3].y*f[2],n.buffer[3*s.register[0].c+2]+=n.register[3].z*f[2];n.trim_size(),e.addAttribute("normal",new THREE.BufferAttribute(n.buffer,3))}function unIndexIndexedGeometry(e){var r=["a","b","c"],t=["x","y","z"],i=["x","y"],s=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,t),n=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,r),a=new TypedArrayHelper(0,3,THREE.Vector2,Float32Array,2,i),g=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,t);s.from_existing(e.getAttribute("position").array),n.from_existing(e.index.array),a.from_existing(e.getAttribute("uv").array),compute_vertex_normals(e),g.from_existing(e.getAttribute("normal").array);for(var o=new TypedArrayHelper(3*n.length,3,THREE.Vector3,Float32Array,3,t),f=new TypedArrayHelper(3*n.length,3,THREE.Vector3,Float32Array,3,t),u=new TypedArrayHelper(3*n.length,3,THREE.Vector2,Float32Array,2,i),h=0,l=n.length;h<l;h++)n.index_to_register(h,0),s.index_to_register(n.register[0].a,0),s.index_to_register(n.register[0].b,1),s.index_to_register(n.register[0].c,2),o.push_element(s.register[0]),o.push_element(s.register[1]),o.push_element(s.register[2]),0!==a.length&&(a.index_to_register(3*h+0,0),a.index_to_register(3*h+1,1),a.index_to_register(3*h+2,2),u.push_element(a.register[0]),u.push_element(a.register[1]),u.push_element(a.register[2])),g.index_to_register(n.register[0].a,0),g.index_to_register(n.register[0].b,1),g.index_to_register(n.register[0].c,2),f.push_element(g.register[0]),f.push_element(g.register[1]),f.push_element(g.register[2]);return o.trim_size(),u.trim_size(),f.trim_size(),e.index=null,e.addAttribute("position",new THREE.BufferAttribute(o.buffer,3)),e.addAttribute("normal",new THREE.BufferAttribute(f.buffer,3)),0!==u.length&&e.addAttribute("uv",new THREE.BufferAttribute(u.buffer,2)),e}THREE.Face3.prototype.set=function(e,r,t){this.a=e,this.b=r,this.c=t};var TypedArrayHelper=function(e,r,t,i,s,n){this.array_type=i,this.register_type=t,this.unit_size=s,this.accessors=n,this.buffer=new i(e*s),this.register=[],this.length=0,this.real_length=e,this.available_registers=r;for(var a=0;a<r;a++)this.register.push(new t)};TypedArrayHelper.prototype={constructor:TypedArrayHelper,index_to_register:function(e,r,t){var i=e*this.unit_size;if(r>=this.available_registers)throw new Error("THREE.BufferSubdivisionModifier: Not enough registers in TypedArrayHelper.");if(e>this.length)throw new Error("THREE.BufferSubdivisionModifier: Index is out of range in TypedArrayHelper.");for(var s=0;s<this.unit_size;s++)this.register[r][this.accessors[s]]=this.buffer[i+s]},resize:function(e){if(0===e&&(e=8),e<this.length)this.buffer=this.buffer.subarray(0,this.length*this.unit_size);else{var r;this.buffer.length<e*this.unit_size?(r=new this.array_type(e*this.unit_size),r.set(this.buffer),this.buffer=r,this.real_length=e):(r=new this.array_type(e*this.unit_size),r.set(this.buffer.subarray(0,this.length*this.unit_size)),this.buffer=r,this.real_length=e)}},from_existing:function(e){var r=e.length;this.buffer=new this.array_type(r),this.buffer.set(e),this.length=e.length/this.unit_size,this.real_length=this.length},push_element:function(e){this.length+1>this.real_length&&this.resize(2*this.real_length);for(var r=this.length*this.unit_size,t=0;t<this.unit_size;t++)this.buffer[r+t]=e[this.accessors[t]];this.length++},trim_size:function(){this.length<this.real_length&&this.resize(this.length)}},THREE.BufferSubdivisionModifier=function(e){this.subdivisions=void 0===e?1:e},THREE.BufferSubdivisionModifier.prototype.modify=function(e){e instanceof THREE.Geometry?(e.mergeVertices(),"undefined"==typeof e.normals&&(e.normals=[]),e=convertGeometryToIndexedBuffer(e)):e instanceof THREE.BufferGeometry||console.error("THREE.BufferSubdivisionModifier: Geometry is not an instance of THREE.BufferGeometry or THREE.Geometry");for(var r=this.subdivisions;r-- >0;)this.smooth(e);return unIndexIndexedGeometry(e)};var edge_type=function(e,r){this.a=e,this.b=r,this.faces=[],this.newEdge=null};!function(){function e(e,r,t){var i=Math.min(e,r)+"_"+Math.max(e,r);return t[i]}function r(e,r,t,i,s,n){var a,g=Math.min(e,r),o=Math.max(e,r),f=g+"_"+o;f in i?a=i[f]:(a=new edge_type(g,o),i[f]=a),a.faces.push(s),n[e].edges.push(a),n[r].edges.push(a)}function t(e,t,i,s){var n,a,g;for(n=0,a=e.length;n<a;n++)i[n]={edges:[]};for(n=0,a=t.length;n<a;n++)t.index_to_register(n,0),g=t.register[0],r(g.a,g.b,e,s,n,i),r(g.b,g.c,e,s,n,i),r(g.c,g.a,e,s,n,i)}function i(e,r){e.push_element(r)}function s(e,r){return Math.abs(r-e)/2+Math.min(e,r)}function n(e,r,t,i){e.push_element(r),e.push_element(t),e.push_element(i)}var a=["a","b","c"],g=["x","y","z"],o=["x","y"];THREE.BufferSubdivisionModifier.prototype.smooth=function(r){var f,u,h,l,y,_,d,b,p,x,c,E,m;f=new TypedArrayHelper(0,3,THREE.Vector3,Float32Array,3,g),u=new TypedArrayHelper(0,3,THREE.Face3,Uint32Array,3,a),h=new TypedArrayHelper(0,3,THREE.Vector2,Float32Array,2,o),f.from_existing(r.getAttribute("position").array),u.from_existing(r.index.array),h.from_existing(r.getAttribute("uv").array);var A=!1;"undefined"!=typeof h&&0!==h.length&&(A=!0),E=new Array(f.length),m={},t(f,u,E,m),l=new TypedArrayHelper(2*r.getAttribute("position").array.length/3,2,THREE.Vector3,Float32Array,3,g);var T,H,v,w,R,z,V,F=l.register[1];for(b in m){for(H=m[b],v=l.register[0],R=3/8,z=1/8,V=H.faces.length,2!==V&&(R=.5,z=0),f.index_to_register(H.a,0),f.index_to_register(H.b,1),v.addVectors(f.register[0],f.register[1]).multiplyScalar(R),F.set(0,0,0),x=0;x<V;x++){for(u.index_to_register(H.faces[x],0),w=u.register[0],c=0;c<3&&(f.index_to_register(w[a[c]],2),T=f.register[2],w[a[c]]===H.a||w[a[c]]===H.b);c++);F.add(T)}F.multiplyScalar(z),v.add(F),H.newEdge=l.length,l.push_element(v)}var B,M,G,S,I,U,N,j=l.length;for(b=0,p=f.length;b<p;b++){for(f.index_to_register(b,0,g),U=f.register[0],I=E[b].edges,d=I.length,3===d?B=3/16:d>3&&(B=3/(8*d)),M=1-d*B,G=B,d<=2&&2===d&&(M=.75,G=1/8),N=U.multiplyScalar(M),F.set(0,0,0),x=0;x<d;x++)S=I[x],T=S.a!==b?S.a:S.b,f.index_to_register(T,1,g),F.add(f.register[1]);F.multiplyScalar(G),N.add(F),l.push_element(N,g)}var k,q,C;y=new TypedArrayHelper(4*r.index.array.length/3,1,THREE.Face3,Float32Array,3,a),_=new TypedArrayHelper(4*r.getAttribute("uv").array.length/2,3,THREE.Vector2,Float32Array,2,o);var D=_.register[0],J=_.register[1],K=_.register[2],L=y.register[0];for(b=0,p=u.length;b<p;b++)u.index_to_register(b,0),w=u.register[0],k=e(w.a,w.b,m).newEdge,q=e(w.b,w.c,m).newEdge,C=e(w.c,w.a,m).newEdge,L.set(k,q,C),i(y,L),L.set(w.a+j,k,C),i(y,L),L.set(w.b+j,q,k),i(y,L),L.set(w.c+j,C,q),i(y,L),A===!0&&(h.index_to_register(3*b+0,0),h.index_to_register(3*b+1,1),h.index_to_register(3*b+2,2),x0=h.register[0],x1=h.register[1],x2=h.register[2],D.set(s(x0.x,x1.x),s(x0.y,x1.y)),J.set(s(x1.x,x2.x),s(x1.y,x2.y)),K.set(s(x0.x,x2.x),s(x0.y,x2.y)),n(_,D,J,K),n(_,x0,D,K),n(_,x1,J,D),n(_,x2,K,J));y.trim_size(),l.trim_size(),_.trim_size(),r.setIndex(new THREE.BufferAttribute(y.buffer,3)),r.addAttribute("position",new THREE.BufferAttribute(l.buffer,3)),r.addAttribute("uv",new THREE.BufferAttribute(_.buffer,2))}}();