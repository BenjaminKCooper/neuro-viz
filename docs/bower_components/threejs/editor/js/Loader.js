var Loader=function(e){function a(a,r,n){switch(void 0===a.metadata&&(a.metadata={type:"Geometry"}),void 0===a.metadata.type&&(a.metadata.type="Geometry"),void 0!==a.metadata.formatVersion&&(a.metadata.version=a.metadata.formatVersion),a.metadata.type.toLowerCase()){case"buffergeometry":var d=new THREE.BufferGeometryLoader,s=d.parse(a),o=new THREE.Mesh(s);e.execute(new AddObjectCommand(o));break;case"geometry":var d=new THREE.JSONLoader;d.setTexturePath(t.texturePath);var c,s=d.parse(a),i=s.geometry;c=void 0!==s.materials?s.materials.length>1?new THREE.MultiMaterial(s.materials):s.materials[0]:new THREE.MeshStandardMaterial,i.sourceType="ascii",i.sourceFile=r.name;var o;o=i.animation&&i.animation.hierarchy?new THREE.SkinnedMesh(i,c):new THREE.Mesh(i,c),o.name=n,e.execute(new AddObjectCommand(o));break;case"object":var d=new THREE.ObjectLoader;d.setTexturePath(t.texturePath);var s=d.parse(a);s instanceof THREE.Scene?e.execute(new SetSceneCommand(s)):e.execute(new AddObjectCommand(s));break;case"scene":var d=new THREE.SceneLoader;d.parse(a,function(a){e.execute(new SetSceneCommand(a.scene))},"");break;case"app":e.fromJSON(a)}}var t=this;e.signals;this.texturePath="",this.loadFile=function(t){var r=t.name,n=r.split(".").pop().toLowerCase(),d=new FileReader;switch(d.addEventListener("progress",function(e){var a="("+Math.floor(e.total/1e3).format()+" KB)",t=Math.floor(e.loaded/e.total*100)+"%";console.log("Loading",r,a,t)}),n){case"amf":d.addEventListener("load",function(a){var t=new THREE.AMFLoader,r=t.parse(a.target.result);e.execute(new AddObjectCommand(r))},!1),d.readAsArrayBuffer(t);break;case"awd":d.addEventListener("load",function(a){var t=new THREE.AWDLoader,r=t.parse(a.target.result);e.execute(new SetSceneCommand(r))},!1),d.readAsArrayBuffer(t);break;case"babylon":d.addEventListener("load",function(a){var t=a.target.result,r=JSON.parse(t),n=new THREE.BabylonLoader,d=n.parse(r);e.execute(new SetSceneCommand(d))},!1),d.readAsText(t);break;case"babylonmeshdata":d.addEventListener("load",function(a){var t=a.target.result,n=JSON.parse(t),d=new THREE.BabylonLoader,s=d.parseGeometry(n),o=new THREE.MeshStandardMaterial,c=new THREE.Mesh(s,o);c.name=r,e.execute(new AddObjectCommand(c))},!1),d.readAsText(t);break;case"ctm":d.addEventListener("load",function(a){var n=new Uint8Array(a.target.result),d=new CTM.Stream(n);d.offset=0;var s=new THREE.CTMLoader;s.createModel(new CTM.File(d),function(a){a.sourceType="ctm",a.sourceFile=t.name;var n=new THREE.MeshStandardMaterial,d=new THREE.Mesh(a,n);d.name=r,e.execute(new AddObjectCommand(d))})},!1),d.readAsArrayBuffer(t);break;case"dae":d.addEventListener("load",function(a){var t=a.target.result,n=new THREE.ColladaLoader,d=n.parse(t);d.scene.name=r,e.execute(new AddObjectCommand(d.scene))},!1),d.readAsText(t);break;case"fbx":d.addEventListener("load",function(a){var t=a.target.result,r=new THREE.FBXLoader,n=r.parse(t);e.execute(new AddObjectCommand(n))},!1),d.readAsText(t);break;case"gltf":d.addEventListener("load",function(a){var t=a.target.result,n=JSON.parse(t),d=new THREE.GLTFLoader;d.parse(n,function(a){a.scene.name=r,e.execute(new AddObjectCommand(a.scene))})},!1),d.readAsText(t);break;case"js":case"json":case"3geo":case"3mat":case"3obj":case"3scn":d.addEventListener("load",function(e){var n=e.target.result;if(n.indexOf("postMessage")!==-1){var d=new Blob([n],{type:"text/javascript"}),s=URL.createObjectURL(d),o=new Worker(s);return o.onmessage=function(e){e.data.metadata={version:2},a(e.data,t,r)},void o.postMessage(Date.now())}var c;try{c=JSON.parse(n)}catch(e){return void alert(e)}a(c,t,r)},!1),d.readAsText(t);break;case"kmz":d.addEventListener("load",function(a){var t=new THREE.KMZLoader,n=t.parse(a.target.result);n.scene.name=r,e.execute(new AddObjectCommand(n.scene))},!1),d.readAsArrayBuffer(t);break;case"md2":d.addEventListener("load",function(a){var t=a.target.result,n=(new THREE.MD2Loader).parse(t),d=new THREE.MeshStandardMaterial({morphTargets:!0,morphNormals:!0}),s=new THREE.Mesh(n,d);s.mixer=new THREE.AnimationMixer(s),s.name=r,e.execute(new AddObjectCommand(s))},!1),d.readAsArrayBuffer(t);break;case"obj":d.addEventListener("load",function(a){var t=a.target.result,n=(new THREE.OBJLoader).parse(t);n.name=r,e.execute(new AddObjectCommand(n))},!1),d.readAsText(t);break;case"playcanvas":d.addEventListener("load",function(a){var t=a.target.result,r=JSON.parse(t),n=new THREE.PlayCanvasLoader,d=n.parse(r);e.execute(new AddObjectCommand(d))},!1),d.readAsText(t);break;case"ply":d.addEventListener("load",function(a){var n=a.target.result,d=(new THREE.PLYLoader).parse(n);d.sourceType="ply",d.sourceFile=t.name;var s=new THREE.MeshStandardMaterial,o=new THREE.Mesh(d,s);o.name=r,e.execute(new AddObjectCommand(o))},!1),d.readAsArrayBuffer(t);break;case"stl":d.addEventListener("load",function(a){var n=a.target.result,d=(new THREE.STLLoader).parse(n);d.sourceType="stl",d.sourceFile=t.name;var s=new THREE.MeshStandardMaterial,o=new THREE.Mesh(d,s);o.name=r,e.execute(new AddObjectCommand(o))},!1),void 0!==d.readAsBinaryString?d.readAsBinaryString(t):d.readAsArrayBuffer(t);break;case"vtk":d.addEventListener("load",function(a){var n=a.target.result,d=(new THREE.VTKLoader).parse(n);d.sourceType="vtk",d.sourceFile=t.name;var s=new THREE.MeshStandardMaterial,o=new THREE.Mesh(d,s);o.name=r,e.execute(new AddObjectCommand(o))},!1),d.readAsText(t);break;case"wrl":d.addEventListener("load",function(a){var t=a.target.result,r=(new THREE.VRMLLoader).parse(t);e.execute(new SetSceneCommand(r))},!1),d.readAsText(t);break;default:alert("Unsupported file format ("+n+").")}}};