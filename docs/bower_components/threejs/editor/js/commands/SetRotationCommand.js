var SetRotationCommand=function(t,o,i){Command.call(this),this.type="SetRotationCommand",this.name="Set Rotation",this.updatable=!0,this.object=t,void 0!==t&&void 0!==o&&(this.oldRotation=t.rotation.clone(),this.newRotation=o.clone()),void 0!==i&&(this.oldRotation=i.clone())};SetRotationCommand.prototype={execute:function(){this.object.rotation.copy(this.newRotation),this.object.updateMatrixWorld(!0),this.editor.signals.objectChanged.dispatch(this.object)},undo:function(){this.object.rotation.copy(this.oldRotation),this.object.updateMatrixWorld(!0),this.editor.signals.objectChanged.dispatch(this.object)},update:function(t){this.newRotation.copy(t.newRotation)},toJSON:function(){var t=Command.prototype.toJSON.call(this);return t.objectUuid=this.object.uuid,t.oldRotation=this.oldRotation.toArray(),t.newRotation=this.newRotation.toArray(),t},fromJSON:function(t){Command.prototype.fromJSON.call(this,t),this.object=this.editor.objectByUuid(t.objectUuid),this.oldRotation=(new THREE.Euler).fromArray(t.oldRotation),this.newRotation=(new THREE.Euler).fromArray(t.newRotation)}};