function render(){if(renderer.render(scene,camera),hasMorph){var e=Date.now();animation.update(e-prevTime),prevTime=e}}function animate(){if(requestAnimationFrame(animate),null!==mixer){var e=clock.getDelta();mixer.update(e)}render()}function onWindowResize(){camera.aspect=container.offsetWidth/container.offsetHeight,camera.updateProjectionMatrix(),renderer.setSize(container.offsetWidth,container.offsetHeight),render()}function setupScene(e,t){scene=new THREE.Scene,scene.add(new THREE.GridHelper(10,8))}function setupLights(){var e=new THREE.DirectionalLight(12105912);e.position.set(1,1,1).normalize(),e.intensity=1,scene.add(e),e=new THREE.DirectionalLight(12105912),e.position.set(-1,.6,.5).normalize(),e.intensity=.5,scene.add(e),e=new THREE.DirectionalLight,e.position.set(-.3,.6,-.8).normalize(12105912),e.intensity=.45,scene.add(e)}function loadObject(e){var t=new THREE.ObjectLoader;scene=t.parse(e);for(var n=!1,a=["AmbientLight","DirectionalLight","PointLight","SpotLight","RectAreaLight","HemisphereLight"],r=["OrthographicCamera","PerspectiveCamera"],i=0;i<scene.children.length;i++){var o=a.indexOf(scene.children[i].type);if(o>-1)n=!0;else{var s=r.indexOf(scene.children[i].type);if(s>-1){camera=scene.children[i];var c=document.getElementById("viewport");orbit=new THREE.OrbitControls(camera,c),orbit.addEventListener("change",render);var d=c.offsetWidth/c.offsetHeight;camera.aspect=d,camera.updateProjectionMatrix()}}}n||setupLights(),scene.add(new THREE.GridHelper(10,2.5)),render()}function loadGeometry(e,t){var n=new THREE.JSONLoader,a=THREE.Loader.prototype.extractUrlBase(t);e=n.parse(e,a),void 0===e.materials&&(console.log("using default material"),e.materials=[new THREE.MeshLambertMaterial({color:12105912})]);var r,i=new THREE.MultiMaterial(e.materials);void 0!==e.geometry.animations&&e.geometry.animations.length>0?(console.log("loading animation"),e.materials[0].skinning=!0,r=new THREE.SkinnedMesh(e.geometry,i,!1),mixer=new THREE.AnimationMixer(r),animation=mixer.clipAction(r.geometry.animations[0])):(r=new THREE.Mesh(e.geometry,i),e.geometry.morphTargets.length>0&&(console.log("loading morph targets"),e.materials[0].morphTargets=!0,animation=new THREE.MorphAnimation(r),hasMorph=!0)),setupScene(),setupLights(),scene.add(r),null!=animation?(console.log("playing animation"),animation.play(),animate()):render()}function loadBufferGeometry(e){var t=new THREE.BufferGeometryLoader,n=t.parse(e),a=new THREE.MeshLambertMaterial({color:12105912}),r=new THREE.Mesh(n,a);setupScene(),setupLights(),scene.add(r),render()}function loadData(e,t){"Geometry"===e.metadata.type?loadGeometry(e,t):"Object"===e.metadata.type?loadObject(e):"BufferGeometry"===e.metadata.type?loadBufferGeometry(e):console.warn("can not determine type")}function init(e){container=document.createElement("div"),container.id="viewport",document.body.appendChild(container),renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0}),renderer.setSize(container.offsetWidth,container.offsetHeight),renderer.setClearColor(0,0),container.appendChild(renderer.domElement),renderer.gammaInput=!0,renderer.gammaOutput=!0;var t=container.offsetWidth/container.offsetHeight;camera=new THREE.PerspectiveCamera(50,t,.01,50),orbit=new THREE.OrbitControls(camera,container),orbit.addEventListener("change",render),camera.position.z=5,camera.position.x=5,camera.position.y=5;var n=new THREE.Vector3(0,1,0);camera.lookAt(n),orbit.target=n,camera.updateProjectionMatrix(),window.addEventListener("resize",onWindowResize,!1);var a=new XMLHttpRequest;a.onreadystatechange=function(t){a.readyState===a.DONE&&(200===a.status||0===a.status?loadData(JSON.parse(a.responseText),e):console.error("could not load json "+a.status))},a.open("GET",e,!0),a.withCredentials=!1,a.send(null)}var scene,renderer,camera,container,animation,mixer,hasMorph=!1,prevTime=Date.now(),clock=new THREE.Clock;