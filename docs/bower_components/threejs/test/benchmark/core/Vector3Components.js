!function(){var t=Bench.newSuite("Vector 3 Components");THREE={},THREE.Vector3=function(t,e,n){this.x=t||0,this.y=e||0,this.z=n||0},THREE.Vector3.prototype={constructor:THREE.Vector3,setComponent:function(t,e){this[THREE.Vector3.__indexToName[t]]=e},getComponent:function(t){return this[THREE.Vector3.__indexToName[t]]},setComponent2:function(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}},getComponent2:function(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}},getComponent3:function(t){if(0===t)return this.x;if(1===t)return this.y;if(2===t)return this.z;throw new Error("index is out of range: "+t)},getComponent4:function(t){if(0===t)return this.x;if(1===t)return this.y;if(2===t)return this.z;throw new Error("index is out of range: "+t)}},THREE.Vector3.__indexToName={0:"x",1:"y",2:"z"};for(var e=[],n=0;n<1e5;n++)e[n]=new THREE.Vector3(.01*n,2*n,n*-1.3);t.add("IndexToName",function(){for(var t=0,n=0;n<1e5;n++)t+=e[n].getComponent(n%3)}),t.add("SwitchStatement",function(){for(var t=0,n=0;n<1e5;n++)t+=e[n].getComponent2(n%3)}),t.add("IfAndReturnSeries",function(){for(var t=0,n=0;n<1e5;n++)t+=e[n].getComponent3(n%3)}),t.add("IfReturnElseSeries",function(){for(var t=0,n=0;n<1e5;n++)t+=e[n].getComponent4(n%3)})}();