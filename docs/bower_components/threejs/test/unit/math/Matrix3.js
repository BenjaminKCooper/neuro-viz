module("Matrix3");var matrixEquals3=function(e,t,n){if(n=n||1e-4,e.elements.length!=t.elements.length)return!1;for(var s=0,a=e.elements.length;s<a;s++){var o=e.elements[s]-t.elements[s];if(o>n)return!1}return!0},toMatrix4=function(e){var t=new THREE.Matrix4,n=t.elements,s=e.elements;return n[0]=s[0],n[1]=s[1],n[2]=s[2],n[4]=s[3],n[5]=s[4],n[6]=s[5],n[8]=s[6],n[9]=s[7],n[10]=s[8],t};test("constructor",function(){var e=new THREE.Matrix3;ok(1==e.determinant(),"Passed!");var t=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8);ok(0==t.elements[0]),ok(3==t.elements[1]),ok(6==t.elements[2]),ok(1==t.elements[3]),ok(4==t.elements[4]),ok(7==t.elements[5]),ok(2==t.elements[6]),ok(5==t.elements[7]),ok(8==t.elements[8]),ok(!matrixEquals3(e,t),"Passed!")}),test("copy",function(){var e=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8),t=(new THREE.Matrix3).copy(e);ok(matrixEquals3(e,t),"Passed!"),e.elements[0]=2,ok(!matrixEquals3(e,t),"Passed!")}),test("set",function(){var e=new THREE.Matrix3;ok(1==e.determinant(),"Passed!"),e.set(0,1,2,3,4,5,6,7,8),ok(0==e.elements[0]),ok(3==e.elements[1]),ok(6==e.elements[2]),ok(1==e.elements[3]),ok(4==e.elements[4]),ok(7==e.elements[5]),ok(2==e.elements[6]),ok(5==e.elements[7]),ok(8==e.elements[8])}),test("identity",function(){var e=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8);ok(0==e.elements[0]),ok(3==e.elements[1]),ok(6==e.elements[2]),ok(1==e.elements[3]),ok(4==e.elements[4]),ok(7==e.elements[5]),ok(2==e.elements[6]),ok(5==e.elements[7]),ok(8==e.elements[8]);var t=new THREE.Matrix3;ok(!matrixEquals3(t,e),"Passed!"),e.identity(),ok(matrixEquals3(t,e),"Passed!")}),test("multiplyScalar",function(){var e=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8);ok(0==e.elements[0]),ok(3==e.elements[1]),ok(6==e.elements[2]),ok(1==e.elements[3]),ok(4==e.elements[4]),ok(7==e.elements[5]),ok(2==e.elements[6]),ok(5==e.elements[7]),ok(8==e.elements[8]),e.multiplyScalar(2),ok(0==e.elements[0]),ok(6==e.elements[1]),ok(12==e.elements[2]),ok(2==e.elements[3]),ok(8==e.elements[4]),ok(14==e.elements[5]),ok(4==e.elements[6]),ok(10==e.elements[7]),ok(16==e.elements[8])}),test("determinant",function(){var e=new THREE.Matrix3;ok(1==e.determinant(),"Passed!"),e.elements[0]=2,ok(2==e.determinant(),"Passed!"),e.elements[0]=0,ok(0==e.determinant(),"Passed!"),e.set(2,3,4,5,13,7,8,9,11),ok(e.determinant()==-73,"Passed!")}),test("getInverse",function(){var e=new THREE.Matrix3,t=new THREE.Matrix4,n=new THREE.Matrix3,s=(new THREE.Matrix3).set(0,0,0,0,0,0,0,0,0),a=(new THREE.Matrix3).set(0,0,0,0,0,0,0,0,0);s.getInverse(n,!1),ok(matrixEquals3(n,e),"Passed!");try{s.getInverse(a,!0),ok(!1,"Passed!")}catch(e){ok(!0,"Passed!")}for(var o=[(new THREE.Matrix4).makeRotationX(.3),(new THREE.Matrix4).makeRotationX(-.3),(new THREE.Matrix4).makeRotationY(.3),(new THREE.Matrix4).makeRotationY(-.3),(new THREE.Matrix4).makeRotationZ(.3),(new THREE.Matrix4).makeRotationZ(-.3),(new THREE.Matrix4).makeScale(1,2,3),(new THREE.Matrix4).makeScale(1/8,.5,1/3)],r=0,m=o.length;r<m;r++){var l=o[r];n.setFromMatrix4(l);var i=s.getInverse(n),k=toMatrix4(i);ok(Math.abs(n.determinant()*i.determinant()-1)<1e-4,"Passed!"),ok(Math.abs(l.determinant()*k.determinant()-1)<1e-4,"Passed!");var E=(new THREE.Matrix4).multiplyMatrices(l,k);ok(Math.abs(E.determinant()-1)<1e-4,"Passed!"),ok(matrixEquals3(E,t),"Passed!")}}),test("transpose",function(){var e=new THREE.Matrix3,t=e.clone().transpose();ok(matrixEquals3(e,t),"Passed!"),t=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8);var n=t.clone().transpose();ok(!matrixEquals3(t,n),"Passed!"),n.transpose(),ok(matrixEquals3(t,n),"Passed!")}),test("clone",function(){var e=(new THREE.Matrix3).set(0,1,2,3,4,5,6,7,8),t=e.clone();ok(matrixEquals3(e,t),"Passed!"),e.elements[0]=2,ok(!matrixEquals3(e,t),"Passed!")});