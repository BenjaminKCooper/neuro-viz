module("BufferAttribute"),test("count",function(){ok(2===new THREE.BufferAttribute(new Float32Array([1,2,3,4,5,6]),3).count,"count is equal to the number of chunks")}),test("copy",function(){var r=new THREE.BufferAttribute(new Float32Array([1,2,3,4,5,6]),3);r.setDynamic(!0),r.needsUpdate=!0;var e=(new THREE.BufferAttribute).copy(r);ok(r.count===e.count,"count is equal"),ok(r.itemSize===e.itemSize,"itemSize is equal"),ok(r.dynamic===e.dynamic,"dynamic is equal"),ok(r.array.length===e.array.length,"array length is equal"),ok(1===r.version&&0===e.version,"version is not copied which is good")}),test("copyAt",function(){var r=new THREE.BufferAttribute(new Float32Array([1,2,3,4,5,6,7,8,9]),3),e=new THREE.BufferAttribute(new Float32Array(9),3);e.copyAt(1,r,2),e.copyAt(0,r,1),e.copyAt(2,r,0);var o=r.array,t=e.array;ok(t[0]===o[3]&&t[1]===o[4]&&t[2]===o[5],"chunck copied to correct place"),ok(t[3]===o[6]&&t[4]===o[7]&&t[5]===o[8],"chunck copied to correct place"),ok(t[6]===o[0]&&t[7]===o[1]&&t[8]===o[2],"chunck copied to correct place")}),test("copyColorsArray",function(){var r=new THREE.BufferAttribute(new Float32Array(6),3);r.copyColorsArray([new THREE.Color(0,.5,1),new THREE.Color(.25,1,0)]);var e=r.array;ok(0===e[0]&&.5===e[1]&&1===e[2],"first color was copied correctly"),ok(.25===e[3]&&1===e[4]&&0===e[5],"second color was copied correctly")}),test("copyIndicesArray",function(){var r=new THREE.BufferAttribute(new Float32Array(6),3);r.copyIndicesArray([{a:1,b:2,c:3},{a:4,b:5,c:6}]);var e=r.array;ok(1===e[0]&&2===e[1]&&3===e[2],"first indices were copied correctly"),ok(4===e[3]&&5===e[4]&&6===e[5],"second indices were copied correctly")}),test("copyVector2sArray",function(){var r=new THREE.BufferAttribute(new Float32Array(4),2);r.copyVector2sArray([new THREE.Vector2(1,2),new THREE.Vector2(4,5)]);var e=r.array;ok(1===e[0]&&2===e[1],"first vector was copied correctly"),ok(4===e[2]&&5===e[3],"second vector was copied correctly")}),test("copyVector3sArray",function(){var r=new THREE.BufferAttribute(new Float32Array(6),2);r.copyVector3sArray([new THREE.Vector3(1,2,3),new THREE.Vector3(10,20,30)]);var e=r.array;ok(1===e[0]&&2===e[1]&&3===e[2],"first vector was copied correctly"),ok(10===e[3]&&20===e[4]&&30===e[5],"second vector was copied correctly")}),test("copyVector4sArray",function(){var r=new THREE.BufferAttribute(new Float32Array(8),2);r.copyVector4sArray([new THREE.Vector4(1,2,3,4),new THREE.Vector4(10,20,30,40)]);var e=r.array;ok(1===e[0]&&2===e[1]&&3===e[2]&&4===e[3],"first vector was copied correctly"),ok(10===e[4]&&20===e[5]&&30===e[6]&&40===e[7],"second vector was copied correctly")}),test("clone",function(){var r=new THREE.BufferAttribute(new Float32Array([1,2,3,4,.12,-12]),2),e=r.clone();ok(r.array.length===e.array.length,"attribute was cloned");for(var o=0;o<r.array.length;o++)ok(r.array[o]===e.array[o],"array item is equal")});