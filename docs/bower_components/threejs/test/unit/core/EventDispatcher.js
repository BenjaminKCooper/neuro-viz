module("EventDispatcher"),test("addEventListener",function(){var e=new THREE.EventDispatcher,n={};e.addEventListener("anyType",n),ok(1===e._listeners.anyType.length,"listener with unknown type was added"),ok(e._listeners.anyType[0]===n,"listener with unknown type was added"),e.addEventListener("anyType",n),ok(1===e._listeners.anyType.length,"can't add one listener twice to same type"),ok(e._listeners.anyType[0]===n,"listener is still there")}),test("hasEventListener",function(){var e=new THREE.EventDispatcher,n={};e.addEventListener("anyType",n),ok(e.hasEventListener("anyType",n),"listener was found"),ok(!e.hasEventListener("anotherType",n),"listener was not found which is good")}),test("removeEventListener",function(){var e=new THREE.EventDispatcher,n={};ok(void 0===e._listeners,"there are no listeners by default"),e.addEventListener("anyType",n),ok(1===Object.keys(e._listeners).length&&1===e._listeners.anyType.length,"if a listener was added, there is a new key"),e.removeEventListener("anyType",n),ok(0===e._listeners.anyType.length,"listener was deleted"),e.removeEventListener("unknownType",n),ok(void 0===e._listeners.unknownType,"unknown types will be ignored"),e.removeEventListener("anyType",void 0),ok(0===e._listeners.anyType.length,"undefined listeners are ignored")}),test("dispatchEvent",function(){var e=new THREE.EventDispatcher,n=0,t=function(){n++};e.addEventListener("anyType",t),ok(0===n,"no event, no call"),e.dispatchEvent({type:"anyType"}),ok(1===n,"one event, one call"),e.dispatchEvent({type:"anyType"}),ok(2===n,"two events, two calls")});