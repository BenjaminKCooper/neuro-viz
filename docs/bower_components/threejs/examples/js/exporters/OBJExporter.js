THREE.OBJExporter=function(){},THREE.OBJExporter.prototype={constructor:THREE.OBJExporter,parse:function(e){var t,o,r,n,i="",f=0,E=0,a=0,u=new THREE.Vector3,c=new THREE.Vector3,p=new THREE.Vector2,s=[],y=function(e){var y=0,g=0,x=0,m=e.geometry,l=new THREE.Matrix3;if(m instanceof THREE.Geometry&&(m=(new THREE.BufferGeometry).setFromObject(e)),m instanceof THREE.BufferGeometry){var H=m.getAttribute("position"),R=m.getAttribute("normal"),T=m.getAttribute("uv"),v=m.getIndex();if(i+="o "+e.name+"\n",void 0!==H)for(t=0,r=H.count;t<r;t++,y++)u.x=H.getX(t),u.y=H.getY(t),u.z=H.getZ(t),u.applyMatrix4(e.matrixWorld),i+="v "+u.x+" "+u.y+" "+u.z+"\n";if(void 0!==T)for(t=0,r=T.count;t<r;t++,x++)p.x=T.getX(t),p.y=T.getY(t),i+="vt "+p.x+" "+p.y+"\n";if(void 0!==R)for(l.getNormalMatrix(e.matrixWorld),t=0,r=R.count;t<r;t++,g++)c.x=R.getX(t),c.y=R.getY(t),c.z=R.getZ(t),c.applyMatrix3(l),i+="vn "+c.x+" "+c.y+" "+c.z+"\n";if(null!==v)for(t=0,r=v.count;t<r;t+=3){for(n=0;n<3;n++)o=v.getX(t+n)+1,s[n]=f+o+"/"+(T?E+o:"")+"/"+(a+o);i+="f "+s.join(" ")+"\n"}else for(t=0,r=H.count;t<r;t+=3){for(n=0;n<3;n++)o=t+n+1,s[n]=f+o+"/"+(T?E+o:"")+"/"+(a+o);i+="f "+s.join(" ")+"\n"}}else console.warn("THREE.OBJExporter.parseMesh(): geometry type unsupported",m);f+=y,E+=x,a+=g},g=function(e){var n=0,E=e.geometry,a=e.type;if(E instanceof THREE.Geometry&&(E=(new THREE.BufferGeometry).setFromObject(e)),E instanceof THREE.BufferGeometry){var c=E.getAttribute("position");E.getIndex();if(i+="o "+e.name+"\n",void 0!==c)for(t=0,r=c.count;t<r;t++,n++)u.x=c.getX(t),u.y=c.getY(t),u.z=c.getZ(t),u.applyMatrix4(e.matrixWorld),i+="v "+u.x+" "+u.y+" "+u.z+"\n";if("Line"===a){for(i+="l ",o=1,r=c.count;o<=r;o++)i+=f+o+" ";i+="\n"}if("LineSegments"===a)for(o=1,k=o+1,r=c.count;o<r;o+=2,k=o+1)i+="l "+(f+o)+" "+(f+k)+"\n"}else console.warn("THREE.OBJExporter.parseLine(): geometry type unsupported",E);f+=n};return e.traverse(function(e){e instanceof THREE.Mesh&&y(e),e instanceof THREE.Line&&g(e)}),i}};