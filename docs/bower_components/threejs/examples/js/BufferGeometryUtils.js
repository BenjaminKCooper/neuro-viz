THREE.BufferGeometryUtils={computeTangents:function(r){function t(r,t,e){T.fromArray(E,3*r),l.fromArray(E,3*t),m.fromArray(E,3*e),v.fromArray(i,2*r),w.fromArray(i,2*t),H.fromArray(i,2*e);var o=l.x-T.x,n=m.x-T.x,a=l.y-T.y,c=m.y-T.y,y=l.z-T.z,u=m.z-T.z,s=w.x-v.x,g=H.x-v.x,x=w.y-v.y,A=H.y-v.y,p=1/(s*A-g*x);R.set((A*o-x*n)*p,(A*a-x*c)*p,(A*y-x*u)*p),V.set((s*n-g*o)*p,(s*c-g*a)*p,(s*u-g*y)*p),d[r].add(R),d[t].add(R),d[e].add(R),f[r].add(V),f[t].add(V),f[e].add(V)}function e(r){U.fromArray(c,3*r),j.copy(U),q=d[r],M.copy(q),M.sub(U.multiplyScalar(U.dot(q))).normalize(),S.crossVectors(j,q),F=S.dot(f[r]),G=F<0?-1:1,u[4*r]=M.x,u[4*r+1]=M.y,u[4*r+2]=M.z,u[4*r+3]=G}var o=r.index,n=r.attributes;if(null===o||void 0===n.position||void 0===n.normal||void 0===n.uv)return void console.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var a=o.array,E=n.position.array,c=n.normal.array,i=n.uv.array,y=E.length/3;void 0===n.tangent&&r.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*y),4));for(var u=n.tangent.array,d=[],f=[],s=0;s<y;s++)d[s]=new THREE.Vector3,f[s]=new THREE.Vector3;var T=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3,v=new THREE.Vector2,w=new THREE.Vector2,H=new THREE.Vector2,R=new THREE.Vector3,V=new THREE.Vector3,g=r.groups;0===g.length&&(g=[{start:0,count:a.length}]);for(var x=0,A=g.length;x<A;++x)for(var p=g[x],z=p.start,b=p.count,h=z,B=z+b;h<B;h+=3)t(a[h+0],a[h+1],a[h+2]);for(var G,q,F,M=new THREE.Vector3,S=new THREE.Vector3,U=new THREE.Vector3,j=new THREE.Vector3,x=0,A=g.length;x<A;++x)for(var p=g[x],z=p.start,b=p.count,h=z,B=z+b;h<B;h+=3)e(a[h+0]),e(a[h+1]),e(a[h+2])}};