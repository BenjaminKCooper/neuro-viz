THREE.PlayCanvasLoader=function(e){this.manager=void 0!==e?e:THREE.DefaultLoadingManager},THREE.PlayCanvasLoader.prototype={constructor:THREE.PlayCanvasLoader,load:function(e,r,o,t){var a=this,n=new THREE.FileLoader(a.manager);n.load(e,function(e){r(a.parse(JSON.parse(e)))},o,t)},parse:function(e){function r(e){var r={};for(var o in e){var t,a=e[o],n=a.type,s=a.components;"float32"===n&&(t=new Float32Array(a.data)),void 0===t&&console.log("PlayCanvasLoader: TODO",n),r[o]=new THREE.BufferAttribute(t,s)}e._attributes=r}function o(e){var r=new THREE.BufferGeometry;r.setIndex(new THREE.Uint16BufferAttribute(e.indices,1));var o=n.vertices[e.vertices]._attributes;for(var t in o){var a=o[t];"texCoord0"===t&&(t="uv"),r.addAttribute(t,a)}e._geometry=r}function t(e){var r=n.nodes[e.node],o=n.meshes[e.mesh];void 0===r._geometries&&(r._geometries=[]),r._geometries.push(o._geometry)}function a(e){var r=new THREE.Group;if(r.name=e.name,void 0!==e._geometries)for(var o=new THREE.MeshPhongMaterial,t=0;t<e._geometries.length;t++){var a=e._geometries[t];r.add(new THREE.Mesh(a,o))}for(var t=0;t<e.rotation.length;t++)e.rotation[t]*=Math.PI/180;r.position.fromArray(e.position),r.rotation.fromArray(e.rotation),r.scale.fromArray(e.scale),e._object=r}console.log(e);for(var n=e.model,s=0;s<n.vertices.length;s++)r(n.vertices[s]);for(var s=0;s<n.meshes.length;s++)o(n.meshes[s]);for(var s=0;s<n.meshInstances.length;s++)t(n.meshInstances[s]);for(var s=0;s<n.nodes.length;s++)a(n.nodes[s]);for(var s=0;s<n.parents.length;s++){var i=n.parents[s];i!==-1&&n.nodes[i]._object.add(n.nodes[s]._object)}return n.nodes[0]._object}};