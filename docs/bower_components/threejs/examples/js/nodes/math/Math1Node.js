THREE.Math1Node=function(t,E){THREE.TempNode.call(this),this.a=t,this.method=E||THREE.Math1Node.SIN},THREE.Math1Node.RAD="radians",THREE.Math1Node.DEG="degrees",THREE.Math1Node.EXP="exp",THREE.Math1Node.EXP2="exp2",THREE.Math1Node.LOG="log",THREE.Math1Node.LOG2="log2",THREE.Math1Node.SQRT="sqrt",THREE.Math1Node.INV_SQRT="inversesqrt",THREE.Math1Node.FLOOR="floor",THREE.Math1Node.CEIL="ceil",THREE.Math1Node.NORMALIZE="normalize",THREE.Math1Node.FRACT="fract",THREE.Math1Node.SAT="saturate",THREE.Math1Node.SIN="sin",THREE.Math1Node.COS="cos",THREE.Math1Node.TAN="tan",THREE.Math1Node.ASIN="asin",THREE.Math1Node.ACOS="acos",THREE.Math1Node.ARCTAN="atan",THREE.Math1Node.ABS="abs",THREE.Math1Node.SIGN="sign",THREE.Math1Node.LENGTH="length",THREE.Math1Node.NEGATE="negate",THREE.Math1Node.INVERT="invert",THREE.Math1Node.prototype=Object.create(THREE.TempNode.prototype),THREE.Math1Node.prototype.constructor=THREE.Math1Node,THREE.Math1Node.prototype.getType=function(t){switch(this.method){case THREE.Math1Node.LENGTH:return"fv1"}return this.a.getType(t)},THREE.Math1Node.prototype.generate=function(t,E){var e=(t.material,this.getType(t)),a=this.a.build(t,e);switch(this.method){case THREE.Math1Node.NEGATE:a="(-"+a+")";break;case THREE.Math1Node.INVERT:a="(1.0-"+a+")";break;default:a=this.method+"("+a+")"}return t.format(a,e,E)};