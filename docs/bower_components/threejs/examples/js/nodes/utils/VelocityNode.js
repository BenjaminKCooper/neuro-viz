THREE.VelocityNode=function(t,o){THREE.Vector3Node.call(this),this.requestUpdate=!0,this.target=t,this.position=this.target.position.clone(),this.velocity=new THREE.Vector3,this.moment=new THREE.Vector3,this.params=o||{}},THREE.VelocityNode.prototype=Object.create(THREE.Vector3Node.prototype),THREE.VelocityNode.prototype.constructor=THREE.VelocityNode,THREE.VelocityNode.prototype.updateFrame=function(t){switch(this.velocity.subVectors(this.target.position,this.position),this.position.copy(this.target.position),this.params.type){case"elastic":t*=this.params.fps||60;var o=Math.pow(this.params.spring,t),i=Math.pow(this.params.friction,t);this.moment.x+=this.velocity.x*o,this.moment.y+=this.velocity.y*o,this.moment.z+=this.velocity.z*o,this.moment.x*=i,this.moment.y*=i,this.moment.z*=i,this.value.copy(this.moment);break;default:this.value.copy(this.velocity)}};